#!/bin/sh
### BEGIN INIT INFO
# Provides:          mes
# Required-Start:    $syslog $time $remote_fs
# Required-Stop:     $syslog $time $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      1
# Short-Description: Simple MES Server
# Description:       Simple MES Server
### END INIT INFO
SERVICE_NAME=MES
PATH_TO_JAR=/home/mph/mes/mes-0.5-all.jar
PID_PATH_NAME=/var/run/MES.pid
LOG_FILE=/home/mph/mes/mes.log
export DATABASE_URL=postgresql://mph:mh1234@localhost:5432/mes_perf
export EFRAME_KEY=testKey890123456789012345678901234567890testKey890123456789012345678901234567890
export MICRONAUT_SERVER_PORT=8000
case $1 in
    start)
        echo "Starting $SERVICE_NAME ..."
        if [ ! -f $PID_PATH_NAME ]; then
            cd /home/mph/mes
            sudo -E -u mph nohup java -jar $PATH_TO_JAR /tmp 2>> $LOG_FILE >> $LOG_FILE &
            # Figure out the PID since we called SUDO
            sleep 1
            SUDO_PID=$!
            PID=$(ps --ppid $! -o pid=);
            echo "SUDO PID = $SUDO_PID, PID = $PID"
            #echo $! > $PID_PATH_NAME
            echo $PID > $PID_PATH_NAME
            PID=$(cat $PID_PATH_NAME);
            echo "$SERVICE_NAME started $PID ..."
        else
            echo "$SERVICE_NAME is already running ..."
        fi
    ;;
    stop)
        if [ -f $PID_PATH_NAME ]; then
            PID=$(cat $PID_PATH_NAME);
            echo "$SERVICE_NAME stopping $PID ..."
            kill $PID;
            echo "$SERVICE_NAME stopped ..."
            rm $PID_PATH_NAME
        else
            echo "$SERVICE_NAME is not running ..."
        fi
    ;;
    restart)
        if [ -f $PID_PATH_NAME ]; then
            PID=$(cat $PID_PATH_NAME);
            echo "$SERVICE_NAME stopping ...";
            kill $PID;
            echo "$SERVICE_NAME stopped ...";
            rm $PID_PATH_NAME
            echo "$SERVICE_NAME starting ..."
            sudo -E -u mph nohup java -jar $PATH_TO_JAR /tmp 2>> $LOG_FILE >> $LOG_FILE &
            echo $! > $PID_PATH_NAME
            echo "$SERVICE_NAME started ..."
        else
            echo "$SERVICE_NAME is not running ..."
        fi
    ;;
    status)
      if [ -f $PID_PATH_NAME ]; then
        PID=`cat $PID_PATH_NAME`
        if [ -z "`ps axf | grep -w ${PID} | grep -v grep`" ]; then
            echo "Not running (process dead but pidfile exists)"
            exit 1
        else
            echo "Running [$PID]"
            exit 0
        fi
      else
        echo "Not running"
        exit 3
      fi
    ;;
esac
