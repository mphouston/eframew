name: BuildAndTestAll

on: [push]  # Should be push for build...  to Disable use pull_request

jobs:
  build:
    runs-on: ubuntu-latest

    # The Postgres service for tests.
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: mph
          POSTGRES_PASSWORD: mh1234
          POSTGRES_DB: test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Allows localhost:5432 to work in tests.
          - 5432:5432
        #volumes:
        #  - /source/directory:/destination/directory

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Create eframe_test DB
        run: psql "dbname=test host=localhost user=mph password=mh1234" -c "CREATE DATABASE eframe_test"

      - name: Create core_test DB
        run: psql "dbname=test host=localhost user=mph password=mh1234" -c "CREATE DATABASE core_test"

      - name: Create assy_test DB
        run: psql "dbname=test host=localhost user=mph password=mh1234" -c "CREATE DATABASE assy_test"

      - name: Create Databases
        run: psql "dbname=test host=localhost user=mph password=mh1234" -c "\l"

        #https://github.com/ts-graphviz/setup-graphviz
      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v1

      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: Build and Test
        run: ./gradlew cleanAll testAll -DwriteTests=false

      - name: Archive test artifacts on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: |
            eframe/build/reports
            mes-core/build/reports
            mes-assy/build/reports
            mes/build/reports

      - name: Generate Docs
        run: ./gradlew asciidoctorAll groovyDocAll

      - name: Print DU
        run: du -d 2

      - name: Publish Docs to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./staging/docs

#      - name: Upload
#        run: ./gradlew bintrayUploadAll -Dbintray_key=${{ secrets.bintray_key }}
